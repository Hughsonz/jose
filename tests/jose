#!/bin/sh -ex

ASIGN="RS256 RS384 RS512 ES256 ES384 ES512 PS256 PS384 PS512"
SSIGN="HS256 HS384 HS512"
AWRAP="ECDH-ES ECDH-ES+A128KW ECDH-ES+A192KW ECDH-ES+A256KW RSA1_5 RSA-OAEP RSA-OAEP-256"
SWRAP="A128KW A192KW A256KW A128GCMKW A192GCMKW A256GCMKW"
SENCR="A128CBC-HS256 A192CBC-HS384 A256CBC-HS512 A128GCM A192GCM A256GCM"

tmpdir=`mktemp -d`

function onexit() {
    rm -rf $tmpdir
}

trap onexit EXIT

echo hi > $tmpdir/msg.txt

##
### Generate a key for every supported algorithm
##

for alg in $ASIGN $SSIGN $AWRAP $SWRAP $SENCR; do
    echo "{ \"alg\": \"$alg\" }" | cmd/jose gen -o $tmpdir/$alg.jwk
    cat $tmpdir/$alg.jwk
    echo ""
done

##
### Generate a key for each parameter
##

cmd/jose gen -t '{ "kty": "EC", "crv": "P-256" }'
cmd/jose gen -t '{ "kty": "EC", "crv": "P-384" }'
cmd/jose gen -t '{ "kty": "EC", "crv": "P-521" }'

cmd/jose gen -t '{ "kty": "RSA", "bits": 3072 }'
cmd/jose gen -t '{ "kty": "RSA", "bits": 3072, "e": 257 }'
cmd/jose gen -t '{ "kty": "RSA", "bits": 3072, "e": "AQE" }'

cmd/jose gen -t '{ "kty": "oct", "bytes": 32 }'

##
### Test publicize on each generated key
##

for alg in $ASIGN $SSIGN $AWRAP $SWRAP $SENCR; do
    cmd/jose pub -i $tmpdir/$alg.jwk -o $tmpdir/$alg.jwk.pub
    cat $tmpdir/$alg.jwk.pub
    echo ""

    cat $tmpdir/$alg.jwk | cmd/jose pub
done

##
### Test signature creation on each signature algorithm
##

for alg in $ASIGN $SSIGN; do
    cmd/jose sig -i $tmpdir/msg.txt -o $tmpdir/$alg.jws $tmpdir/$alg.jwk
    cat $tmpdir/$alg.jws
    echo ""
done

##
### Test verification
##

for alg in $ASIGN $SSIGN; do
    cmd/jose ver -i $tmpdir/$alg.jws $tmpdir/$alg.jwk
done

##
### Test encryption
##

for alg in $AWRAP $SWRAP; do
    for enc in $SENCR; do
        cmd/jose enc \
            -t "{\"protected\":{\"enc\":\"$enc\"}}" \
            -i $tmpdir/msg.txt \
            -o $tmpdir/$enc.$alg.jwe \
            $tmpdir/$alg.jwk
    done
done

##
### Test decryption
##

for alg in $AWRAP $SWRAP; do
    for enc in $SENCR; do
        cmd/jose dec -i $tmpdir/$enc.$alg.jwe $tmpdir/$alg.jwk
    done
done
